name: CI/CD Deploy to AWS EC2

on:
  push:
    branches: ["main", "dev"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Check required environment variables
        run: |
          missing=0
          while IFS= read -r line; do
            key=$(echo "$line" | cut -d= -f1)
            if [ -n "$key" ] && [ -z "${!key}" ]; then
              echo "‚ùå Missing required environment variable: $key"
              missing=1
            fi
          done < env.sample
          if [ $missing -eq 1 ]; then
            echo "ERROR: One or more required environment variables are missing."
            exit 1
          fi

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DEV_SERVER_HOST }}
          username: ubuntu
          key: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
          script: |
            sudo docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            sudo docker pull ${{ steps.meta.outputs.tags }}
            sudo docker stop test-app || true
            sudo docker rm test-app || true
            sudo docker run -d --name test-app -p 3000:3000 ${{ steps.meta.outputs.tags }}
