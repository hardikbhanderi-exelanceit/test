name: CI/CD Deploy to AWS EC2

on:
  push:
    branches: ["main", "dev"]

env:
  CONTAINER_IMAGE: hardikexelanceit/test-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build Docker image
        run: |
          echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USER }}" --password-stdin
          docker build -t $CONTAINER_IMAGE:latest .
          docker push $CONTAINER_IMAGE:latest
          docker logout

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DEV_SERVER_HOST }}
          username: ubuntu
          key: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
          script: |
            set -e
            echo "Pulling latest image..."
            sudo docker pull ${{ env.CONTAINER_IMAGE }}:latest
            
            echo "Stopping existing container..."
            sudo docker stop test-app 2>/dev/null || true
            
            echo "Removing existing container..."
            sudo docker rm test-app 2>/dev/null || true
            
            echo "Starting new container..."
            DOCKER_CMD="sudo docker run -d --name test-app"
            DOCKER_CMD="$DOCKER_CMD -p 80:3000"
            DOCKER_CMD="$DOCKER_CMD -e NODE_ENV=production"
            DOCKER_CMD="$DOCKER_CMD -e PORT=3000"
            DOCKER_CMD="$DOCKER_CMD --restart unless-stopped"
            DOCKER_CMD="$DOCKER_CMD ${{ env.CONTAINER_IMAGE }}:latest"
            eval $DOCKER_CMD
            
            echo "Verifying container is running..."
            sudo docker ps | grep test-app